[package]
name = "tycho-consensus"
description = "DAG-based consensus for external messages queue."
version.workspace = true
authors.workspace = true
edition.workspace = true
rust-version.workspace = true
repository.workspace = true
license.workspace = true

[[example]]
name = "consensus-node"
path = "examples/consensus_node.rs"

[dependencies]
ahash = { workspace = true }
anyhow = { workspace = true }
bincode = { workspace = true }
bytes = { workspace = true, features = ["serde"] }
dashmap = { workspace = true }
everscale-crypto = { workspace = true }
futures-util = { workspace = true }
itertools = { workspace = true }
parking_lot = { workspace = true }
rand = { workspace = true, features = ["small_rng"] }
rand_pcg = { workspace = true }
serde = { workspace = true, features = ["derive"] }
sha2 = { workspace = true }
tokio = { workspace = true, default-features = false }
tracing = { workspace = true }
weedb = { workspace = true }

# examples' dependencies
clap = { workspace = true }
hex = { workspace = true }
serde_json = { workspace = true }
tracing-appender = { workspace = true }

# local deps
tycho-network = { workspace = true }
tycho-storage = { workspace = true }
tycho-util = { workspace = true, features = ["test"] }

[dev-dependencies]
parking_lot = { workspace = true, features = ["deadlock_detection"] }
tokio = { workspace = true, default-features = false, features = ["rt-multi-thread", "macros"] }
tracing-subscriber = { workspace = true, features = ["env-filter"] }

[lints]
workspace = true
